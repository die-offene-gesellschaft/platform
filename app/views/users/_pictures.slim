ruby:
  user_grid = [
    {
      classes: 'desktop-size1x1 desktop-x1 desktop-y1 size1x1 x1 y1',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x2 desktop-y1 size1x1 x2 y1',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x3 desktop-y1 size1x1 x1 y2',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x4 desktop-y1 size1x1 x2 y2',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x5 desktop-y1 size1x1 x1 y3',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x6 desktop-y1 size1x1 x2 y3',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x1 desktop-y2 size1x1 x1 y4',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x2 desktop-y2 size1x1 x2 y4',
      type: :picture
    },
    {
      classes: 'desktop-size2x2 desktop-x3 desktop-y2 size2x2 x1 y5',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x5 desktop-y2 size1x1 x1 y7',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x6 desktop-y2 size1x1 x2 y7',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x1 desktop-y3 size1x1 x1 y8',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x2 desktop-y3 size1x1 x2 y8',
      type: :picture
    },
    {
      classes: 'desktop-size2x2 desktop-x5 desktop-y3 size2x2 x1 y9',
      type: :statement
    },
    {
      classes: 'desktop-size2x2 desktop-x1 desktop-y4 size2x2 x1 y12',
      type: :statement
    },
    {
      classes: 'desktop-size1x1 desktop-x3 desktop-y4 size1x1 x1 y11',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x4 desktop-y4 size1x1 x2 y11',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x3 desktop-y5 size1x1 x1 y14',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x4 desktop-y5 size1x1 x2 y14',
      type: :picture
    },
    {
      classes: 'desktop-size2x2 desktop-x5 desktop-y5 size2x2 x1 y15',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x1 desktop-y6 size1x1 x1 y17',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x2 desktop-y6 size1x1 x2 y17',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x3 desktop-y6 size1x1 x1 y18',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x4 desktop-y6 size1x1 x2 y18',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x1 desktop-y7 size1x1 x1 y19',
      type: :picture
    },
    {
      classes: 'desktop-size2x2 desktop-x2 desktop-y7 size2x2 x1 y20',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x4 desktop-y7 size1x1 x2 y19',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x5 desktop-y7 size1x1 x1 y22',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x6 desktop-y7 size1x1 x2 y22',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x1 desktop-y8 size1x1 x1 y23',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x4 desktop-y8 size1x1 x2 y23',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x5 desktop-y8 size1x1 x1 y24',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x6 desktop-y8 size1x1 x2 y24',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x1 desktop-y9 size1x1 x1 y25',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x2 desktop-y9 size1x1 x2 y25',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x3 desktop-y9 size1x1 x1 y26',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x4 desktop-y9 size1x1 x2 y26',
      type: :picture
    },
    {
      classes: 'desktop-size2x2 desktop-x5 desktop-y9 size2x2 x1 y27',
      type: :statement
    },
    {
      classes: 'desktop-size1x1 desktop-x1 desktop-y10 size1x1 x1 y29',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x2 desktop-y10 size1x1 x2 y29',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x3 desktop-y10 size1x1 x1 y30',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x4 desktop-y10 size1x1 x2 y30',
      type: :picture
    },
    {
      classes: 'desktop-size2x2 desktop-x1 desktop-y11 size2x2 x1 y31',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x3 desktop-y11 size1x1 x1 y33',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x4 desktop-y11 size1x1 x2 y33',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x5 desktop-y11 size1x1 x1 y34',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x6 desktop-y11 size1x1 x2 y34',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x3 desktop-y12 size1x1 x1 y35',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x4 desktop-y12 size1x1 x2 y35',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x5 desktop-y12 size1x1 x1 y36',
      type: :picture
    },
    {
      classes: 'desktop-size1x1 desktop-x6 desktop-y12 size1x1 x2 y36',
      type: :picture
    }
  ]

- tiles = []
- users.each_with_index do |user, index|
  - tile_definition = user_grid[index % user_grid.count]
  - if tile_definition[:type] == :statement
    - tiles << render('picture_grid_item',
                      classes: tile_definition[:classes],
                      user: statement_users[index % statement_users.count],
                      statement: true)
  - else
    - tiles << render('picture_grid_item',
                      classes: tile_definition[:classes],
                      user: user,
                      statement: false)
  - if tiles.count == user_grid.count
    .grid
      - tiles.each do |tile|
        = tile
    - tiles = []

- if member_signed_in?
  - content_for :modals do
    .modal.fade id="user-id-#{current_user.id}" tabindex="-1" role="dialog" aria-labelledby="user-id-#{current_user.id}" aria-hidden="true"
      .modal-dialog role="document"
        .modal-content
          button.close type="button" data-dismiss="modal" aria-label="Close"
            span aria-hidden="true"
              = fa_icon 'times'
          .modal-body.user-modal
            = render 'shared/user/modal_details',
                      user: current_user,
                      large_user_image: false

= content_for :modals
