ruby:
  appointments = archive = false
  appointments = true if request.query_parameters.keys.include?('appointments')
  archive = true if request.query_parameters.keys.include?('archive')

.events
  = render 'shared/subnav',
           items: t('events.subnav'),
           active: archive ? 'archive' : 'appointments'
  .row
    iframe frameborder='0' src='https://lucid-berlin.carto.com/viz/32514800-779d-11e6-8037-0e233c30368f/embed_map' allowfullscreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen
    - if archive
      - @events.each do |year, events|
        table.archive
          tbody
            tr
              td.year colspan='3'
                = l(year, format: '%Y')
            - events.each_slice(3) do |slice|
              tr.event
                - slice.each do |event|
                  td
                    ruby:
                      type = 'blank'
                      type = 'picture' if event.picture.path
                      type = 'statement' if event
                    a class="#{type}" href="#{event_path(event)}" style="#{"background-image: url(#{asset_path(event.picture)})" if type == 'picture'}"
                      = event.title
                - (3 - slice.count).times do
                  td.dummy
    - else
      - @events.each do |month, events|
        table.appointments
          tbody
            tr
              td.month colspan='2'
                = l(month, format: '%B')
                | &nbsp;
                br
                = l(month, format: '%Y')
                = fa_icon 'chevron-down 2x'
            - events.each do |event|
              tr.event data-href="#{event_path(event)}"
                td.date
                  = l(event.begin_at, format: :short_date)
                td.details
                  p.city
                    - venue = event.venue
                    = venue.city
                  p.event-type-and-active-members
                    = t 'events.event-type-and-active-members',
                        event_type: event.event_type,
                        active_members: event.active_members.map(&:full_name).join(', ')
                  p.time
                    = l(event.begin_at, format: :short_time)
                  p.venue
                    = venue.name
                - if admin_signed_in?
                  td
                    = link_to 'Show',
                              event
                    = link_to 'Edit',
                              edit_event_path(event)
                    = link_to 'Destroy',
                              event,
                              method: :delete,
                              data: { confirm: 'Are you sure?' }
      - if admin_signed_in?
        br
        = link_to 'New Event',
                  new_event_path
