ruby:
  meta_nav_items = {
    faciliation: { label: t('header.meta-nav.faciliation'), url: faciliation_path },
    contact: { label: t('header.meta-nav.contact'), url: "#{about_path}##{t('header.meta-nav.contact').downcase}" }
  }
  meta_nav_items[:my_profile] = { label: t('header.meta-nav.my-profile'), url: "#{users_path(pictures: '')}#show(#user-id-#{current_user.id})" } if member_signed_in?
  nav_items = {
    home: { label: t('header.nav.home'), url: home_path },
    events: {
      label: t('header.nav.events'),
      url: events_path(appointments: ''),
      children: {
        appointments: { label: t('header.nav.events_appointments'), url: events_path(appointments: '') },
        archive: { label: t('header.nav.events_archive'), url: events_path(archive: '') }
      }
    },
    users: {
      label: t('header.nav.users'),
      url: users_path(pictures: ''),
      children: {
        pictures: { label: t('header.nav.users_pictures'), url: users_path(pictures: '') },
        list: { label: t('header.nav.users_list'), url: users_path(list: '') }
      }
    },
    about: { label: t('header.nav.about'), url: about_path },
    # blogposts: { label: t('header.nav.blogposts'), url: blogposts_path }
  }
header.container-fluid id="header"
  .menu
    input#menu type='checkbox'
    label.button for='menu'
      = fa_icon 'bars fw'
      = fa_icon 'times fw'
      = t('header.menu')
    ul
      - nav_items.each do |name, nav_item|
        li.nav-item
          - if nav_item[:children]
            input type='checkbox' id="submenu#{name}" checked=(controller_name == name.to_s)
            label for="submenu#{name}"
              = nav_item[:label]
            ul.children
              - i = 0
              - nav_item[:children].each do |child_name, nav_child_item|
                li.nav-item.nav-child-item
                  ruby:
                    i += 1
                    active_class = ''
                    get_match = request.query_parameters.keys.include?(child_name.to_s)
                    root_site = controller_name == name.to_s && i == 1
                    active_class = 'active' if get_match || root_site
                  = link_to nav_child_item[:label],
                            nav_child_item[:url],
                            class: ('active' if request.query_parameters.keys.include?(child_name.to_s))
          - else
            = link_to nav_item[:label],
                      nav_item[:url],
                      class: ('active' if controller_name == name.to_s)
      li
        br
      - meta_nav_items.each do |_, meta_nav_item|
        li.meta-nav-item.uppercase
          = link_to meta_nav_item[:label],
                    meta_nav_item[:url]
      li
        br
      li.meta-nav-item
        = link_to t('header.nav.guideline'),
                  guideline_path
      li.meta-nav-item
        = link_to t('header.nav.imprint'),
                  imprint_path
      li.meta-nav-item
        = link_to t('header.nav.privacy'),
                  "#{imprint_path}##{t('header.nav.privacy').downcase}"
      li
        br
      li.meta-nav-item.uppercase
        - if member_signed_in?
          = link_to destroy_user_session_path,
                    method: 'delete',
                    class: 'logout' do
            = t('header.meta-nav.logout')
        - elsif admin_signed_in?
          = link_to destroy_admin_session_path,
                    method: 'delete',
                    class: 'logout' do
            = t('header.meta-nav.logout')
        - else
          a.login href="#{new_user_session_path}"
            = t('header.meta-nav.login')
  a.logo-die-offene-gesellschaft href='/'
    = image_tag 'logo-die-offene-gesellschaft.svg'
  .meta-nav
    - meta_nav_items.each do |_, meta_nav_item|
      = link_to meta_nav_item[:label],
                meta_nav_item[:url]
    - if member_signed_in?
      = link_to destroy_user_session_path,
                method: 'delete',
                class: 'logout' do
        = t('header.meta-nav.logout')
    - elsif admin_signed_in?
      = link_to destroy_admin_session_path,
                method: 'delete',
                class: 'logout' do
        = t('header.meta-nav.logout')
    - else
      a.login href="#{new_user_session_path}"
        = t('header.meta-nav.login')
  nav
    - nav_items.each do |name, nav_item|
      = link_to nav_item[:label],
                nav_item[:url],
                class: ('active' if controller_name == name.to_s)
    = link_to participate_path,
              class: 'participate' do
      = t('header.nav.participate')