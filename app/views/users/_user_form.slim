= simple_form_for user do |f|
  .row
    input.terms-of-use type="checkbox" name='user[terms_of_use]' id='terms-of-use' checked='checked'
    .col-xs-12.col-md-6.name-form
      h1.headline-white.title
        = t('users.user-form.title')
      p.review-notice
        = t('users.user-form.review-notice')
        = " #{t('users.user-form.under-review')}" unless user.locked == false

      .inputs
        = f.input :forename, input_html: { value: user.forename }
        = f.input :surname, input_html: { value: user.surname }
        = f.input :email, input_html: { value: user.email }
        = f.input :current_password,
                  as: :password,
                  input_html: { autocomplete: 'off', placeholder: t('users.user-form.placeholer.password') },
                  hint: t('users.user-form.hints.password')
        = f.input :password,
                  as: :password,
                  input_html: { placeholder: t('users.user-form.placeholer.new-password') }
        = f.input :password_confirmation,
                  as: :password,
                  input_html: { placeholder: t('users.user-form.placeholer.new-password-confirmation') }

        - checked_attribute = {}
        - checked_attribute = { checked: true } if user.newsletter
        input type="checkbox" name='user[newsletter]' id='newsletter' *checked_attribute
        label.boolean for='newsletter'
          span.box
          span.text
            = t 'participate.options.newsletter'

    .col-xs-12.col-md-6.extended-form
      - if user.avatar_file_name?
        .image style="background-image: url('#{asset_url(user.avatar(:normal))}')"
        = link_to t('users.user-form.image.delete-link'),
                  user_delete_avatar_path(user),
                  method: :delete,
                  class: 'delete-avatar-link'
      - else
        .image
          = t('users.user-form.image.blank-slate')

      .inputs
        = f.input :avatar,
                  as: :file,
                  input_html: { accept: '.jpg,.jpeg,.gif,.png', class: 'edit-user-avatar-input' },
                  hint: t('participate.hints.avatar')
        = f.input :role,
                  input_html: { value: user.role }
        = f.input :statement,
                  as: :text,
                  input_html: { value: user.statement, rows: 3 }

        .delete-and-submit-group
          = f.submit t('users.user-form.save-changes'), class: 'button-style'
          .delete-profile-link
            = link_to user_path(current_user),
              method: 'delete',
              data: { confirm: t('confirm') } do
              = t('users.actions.delete-profile')
