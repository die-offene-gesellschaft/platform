.participate
  - if @task == :member
    / show an onboarding text
    .row.what-next
      .col-xs-12
        == @contents[:what_next].value

  - unless flash[:success]
    / show the participate form
    = simple_form_for @user, url: participate_path do |f|
      .row
        - checked_attribute = {}
        - checked_attribute = { checked: true } if @user.terms_of_use
        input.terms-of-use type="checkbox" name='user[terms_of_use]' id='terms-of-use' *checked_attribute
        .col-xs-12.col-md-6.name-form
          h1.headline-white.title
            = t('participate.become-friend')
          p.article-white.introduction
            = t('participate.introduction')
          .inputs
            = f.input :forename, input_html: { value: @user.forename }
            = f.input :surname, input_html: { value: @user.surname }
            = f.input :email, input_html: { value: @user.email }
            - checked_attribute = {}
            - checked_attribute = { checked: true } if @user.newsletter
            input type="checkbox" name='user[newsletter]' id='newsletter' *checked_attribute
            label.boolean for='newsletter'
              span.box
              span.text
                = t 'participate.options.newsletter'
            label.boolean for='terms-of-use'
              span.box
              span.text
                == t 'participate.options.terms-of-use',
                     link: link_to(t('participate.options.terms-of-use-label'), "#{imprint_path}#nutzungsbedingungen", target: '_blank')
            = f.submit t('participate.send')
        .col-xs-12.col-md-6.extended-form
          .inputs
            = f.input :avatar, as: :file, label_html: { class: 'avatar-label' }, input_html: { accept: '.jpg,.jpeg,.gif,.png', class: 'avatar-input' }, label: t('participate.hints.avatar_file_button_label').html_safe
            = f.input :password, as: :password, input_html: { value: @user.password }, hint: t('participate.hints.password')
            = f.input :password_confirmation, as: :password, validate: true, input_html: { placeholder: t('participate.placeholder.password-confirmation') }
            = f.input :role, input_html: { value: @user.role, placeholder: t('participate.hints.about-me') }
            = f.input :statement, as: :text, input_html: { class: 'user-statement', value: @user.statement, placeholder: t('participate.hints.my-statement') }
            = f.submit t('participate.send')
        .col-xs-12.col-md-6.avatars
          - @users.each do |user|
            .image style="background-image: url(#{asset_url(user.avatar(:normal))});"

  / general how-to-support text
  .row.support
    .col-xs-12
      ruby:
        facebook_link = link_to fa_icon('facebook-square'), facebook_share_link
        twitter_link = link_to fa_icon('twitter-square'), twitter_share_link
        transfer_link = sms_link = paypal_link = ''
        content = @contents[:support].value
                                     .gsub(/%{facebook_share_link}/, facebook_link)
                                     .gsub(/%{twitter_share_link}/, twitter_link)
                                     .gsub(/%{transfer_link}/, transfer_link)
                                     .gsub(/%{sms_link}/, sms_link)
                                     .gsub(/%{paypal_link}/, paypal_link)
      == content
  .row.do-it-yourself
        .col-xs-12.col-md-6.diy-text
          a name='do-it-yourself'
          == @contents[:diy].value
        .col-xs-12.col-md-6.diy-avatars
          .image style="background-image: url(#{image_url('participate/action-1.png')});"
          .image style="background-image: url(#{image_url('participate/action-2.png')});"
          .image style="background-image: url(#{image_url('participate/action-3.png')});"
          .image style="background-image: url(#{image_url('participate/action-4.png')});"
          .image style="background-image: url(#{image_url('participate/action-5.png')});"
          .image style="background-image: url(#{image_url('participate/action-6.png')});"
coffee:
    window.avatarButton = new window.AvatarUploadButton()
